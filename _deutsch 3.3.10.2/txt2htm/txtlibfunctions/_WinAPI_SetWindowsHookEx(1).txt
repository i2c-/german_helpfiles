###User Defined Function###
_WinAPI_SetWindowsHookEx

###Description###
F&uuml;gt einen von der Anwendung erstellten Hook in die Hook-Kette ein

###Syntax###
#include <WinAPI.au3>
_WinAPI_SetWindowsHookEx ( $idHook, $lpfn, $hmod [, $dwThreadId = 0] )


###Parameters###
@@ParamTable@@
$idHook
	Legt den Typ der Hook-Prozedur fest. Das kann einer der folgenden Werte sein:
	$WH_CALLWNDPROC - Empf&auml;ngt Nachrichten, bevor sie zum Empf&auml;ngerfenster gesendet werden
	$WH_CALLWNDPROCRET - Empf&auml;ngt Nachrichten, nachdem sie vom Empf&auml;ngerfenster bearbeitet wurden
	$WH_CBT - Empf&auml;ngt Nachrichten, die f&uuml;r Lernzwecke wichtig sind (CBT-Notification)
	$WH_DEBUG - Empf&auml;ngt Nachrichten, die zur Fehlersuche verwendet werden
	$WH_FOREGROUNDIDLE - Empf&auml;ngt Nachrichten, wenn der Haupt-Thread der Anwendung unbesch&auml;ftigt ist
	$WH_GETMESSAGE - Empf&auml;ngt alle Nachrichten, die an eine andere Nachrichtenwarteschlange gesendet wurden
	$WH_JOURNALPLAYBACK - Sendet Nachrichten, die vorher per $WH_JOURNALRECORD-Hook abgefangen wurden
	$WH_JOURNALRECORD - Zeichnet alle Eingabenachrichten auf, die an die System-Nachrichtenbearbeitung gesendet werden
	$WH_KEYBOARD - Empf&auml;ngt Tastatureingaben
	$WH_KEYBOARD_LL - Empf&auml;ngt Tastatur-Codes
	$WH_MOUSE - Empf&auml;ngt allgemeine Mausnachrichten
	$WH_MOUSE_LL - Empf&auml;ngt Maus-Eingabenachrichten (low level)
	$WH_MSGFILTER - Empf&auml;ngt Nachrichten aus einer Aktion in einer Dialogbox, MessageBox, Scrollbar oder einem Men&uuml;
	$WH_SHELL - Empf&auml;ngt Nachrichten, die f&uuml;r Kommandozeilenanwendungen von Bedeutung sein k&ouml;nnen
	$WH_SYSMSGFILTER - Empf&auml;ngt Nachrichten aus einer Aktion in einer Dialogbox, MessageBox, Scrollbar oder einem Men&uuml;
$lpfn
	Zeiger zur Hook-Prozedur. Wenn der $dwThreadId-Parameter null ist oder auf einen Thread verweist, der durch einen anderen Prozess erzeugt wurde,
	muss der $lpfn-Parameter auf eine Hook-Prozedur in einer Dll verweisen.
	Andernfalls kann $lpfn auf eine Hook-Prozedur im Code des aktuellen Prozesses verweisen.
$hmod
	Handle zur Dll, die jene Hook-Prozedur enth&auml;lt, auf die der $lpfn-Parameter verweist.
	Der $hMod-Parameter muss null sein, wenn $dwThreadId eine vom aktuellen Prozess erzeugte Thread-ID enth&auml;lt oder wenn sich der Code der Hook-Prozedur innerhalb des aktuellen Prozesses befindet.
$dwThreadId
	[optional] Gibt den Identifier des Threads an, mit dem die Hook-Prozedur verbunden ist.
	Wenn dieser Parameter null ist, wird die Hook-Prozedur allen Threads zugewiesen, die im selben Arbeitsbereich des aufrufenden Threads laufen.
@@End@@

###ReturnValue###
@@ReturnTable@@
Erfolg:	Handle zur Hook-Prozedur
Fehler:	0. Es ist _WinAPI_GetLastError() aufzurufen um erweiterte Fehlercodes zu erhalten
@@End@@


###Remarks###
Keine.


###Related###
_WinAPI_UnhookWindowsHookEx, _WinAPI_CallNextHookEx


###See Also###
@@MsdnLink@@ SetWindowsHookEx


###Example###
@@IncludeExample@@
