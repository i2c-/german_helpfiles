###Function###
GUICreate

###Description###
Erstellt ein GUI-Fenster.

###Syntax###
GUICreate ( "title" [, width [, height [, left = -1 [, top = -1 [, style = -1 [, exStyle = -1 [, parent = 0]]]]]]] )


###Parameters###
@@ParamTable@@
title
	Der Titel des GUI-Fensters.
width
	[optional] Die Breite des Fensters.
height
	[optional] Die H&ouml;he des Fensters.
left
	[optional] Die linke Seite der Dialogbox. Standardm&auml;&szlig;ig (Wert -1) wird das Fenster zentriert. Wenn left angegeben wird, muss auch top angegeben werden.
top
	[optional] Die Oberkante der Dialogbox. Standardm&auml;&szlig;ig (Wert -1) wird das Fenster zentriert.
style
	[optional] Definiert den Fenster-Stil. Siehe <a href="../appendix/GUIStyles.htm">Anhang GUI-Stile f&uuml;r Controls</a>.
	Verwende -1 f&uuml;r den Standard-Stil, der eine Kombination aus $WS_MINIMIZEBOX, $WS_CAPTION, $WS_POPUP, $WS_SYSMENU Stil ist.
	Einige Stile werden immer mit einbezogen: $WS_CLIPSIBLINGS und $WS_SYSMENU, wenn $WS_MAXIMIZEBOX oder $WS_SIZEBOX verwendet werden.
exStyle
	[optional] Definiert den erweiterten Stil des Fensters. Siehe die <a href="GUICreate.htm#Extended Style Table">Tabelle der erweiterten Stile</a> weiter unten.
	Verwende -1 f&uuml;r Standard, der keinen erweiterten Stil enth&auml;lt.
	Erzwungene Stile: $WS_EX_WINDOWEDGE
parent
	[optional] Das Handle eines anderen, zuvor erstellten Fensters - dieses neue Fenster wird ein Child dieses Parent-Fensters.
@@End@@

###ReturnValue###
@@ReturnTable@@
Erfolg:	Das Handle des Fensters.
Fehler:	0, wenn das Fenster nicht erstellt werden kann und setzt @error auf 1.
@@End@@


###Remarks###
Standardm&auml;&szlig;ig ist die Dialogbox (GUI) in ihrer Gr&ouml;&szlig;e nicht ver&auml;nderbar und kann nicht maximiert werden. Deshalb k&ouml;nnen hierf&uuml;r WS_SIZEBOX oder WS_MAXIMIZEBOX als Stil-Parameter verwendet werden.
Wenn WS_SIZEBOX verwendet wird, wird die erste Dialogbox als minimale Gr&ouml;&szlig;e verwendet und beim Vergr&ouml;&szlig;ern des Fensters werden die Controls automatisch positioniert.
Wenn man nur einen Stil definiert, wird auch nur dieser eine Stil gesetzt. Man sollte also nicht vergessen, ihn mit Standard-Stilen zu kombinieren. Zum Beispiel werden beim Verwenden von WS_SIZEBOX nicht automatisch auch $WS_MINIMIZEBOX, $WS_CAPTION, $WS_POPUP und $WS_SYSMENU gesetzt. Deshalb ist es f&uuml;r ein gr&ouml;&szlig;enver&auml;nderliches Fenster am besten, $WS_OVERLAPPEDWINDOW zu benutzen.
Verwendet man $WS_EX_MDICHILD, dann ist die Position relativ zum Client-Bereich des Parent-Fensters. Mit $WS_EX_LAYERED ist es m&ouml;glich, ein transparentes Bild &uuml;ber ein im Parent-Fenster definiertes Hintergrundbild zu legen.
Das Verwenden von $WS_CLIPCHILDREN kann flackern verhindern, wenn zum Beispiel eine GUI mit einem Edit Control in der Gr&ouml;&szlig;e ver&auml;ndert wird.
Man kann das ziehen eines Fensters f&uuml;r GUI aktivieren ohne $WS_CAPTION zu verwenden. Stattdessen kann man $WS_EX_CONTROLPARENT als erweiterten Stil verwenden. 

Um weitere Stile zum Standardstil hinzuzuf&uuml;gen ist <b><a href="BitOR.htm">BitOR</a></b>($GUI_SS_DEFAULT_GUI, newstyle,...) zu verwenden.
mit der festgelegten Gr&ouml;&szlig;e ist die Arbeitsfl&auml;che der GUI gemeint. Der Rand und die Titelzeile macht das Fenster etwas gr&ouml;&szlig;er als festgelegt. Verwendet man Menu Controls, so &auml;ndert sich auch die Fensterh&ouml;he.

<a id="Extended Style table"></a><b>Tabelle Erweiterte Stile</b>
@@StandardTable1@@
erweiterter Stil	Resultat
$WS_EX_ACCEPTFILES	Erlaubt es, einen Dateinamen per Drag-and-Drop in ein Edit- oder Input-Control einzuf&uuml;gen. Das Textfeld muss zus&auml;tzlich mit <a href="GUICtrlSetState.htm">GUICtrlSetState()</a> auf den Status $GUI_DROPACCEPTED gesetzt werden. Bei anderen Controls kann die Drag-and-Drop-Information &uuml;ber @GUI_DRAGID, @GUI_DRAGFILE, @GUIDROPID erhalten werden. 
$WS_EX_APPWINDOW	Das Fenster erscheint nur als aktuelles Fenstersymbol (top-level) auf der Taskleiste. 
$WS_EX_CLIENTEDGE	Legt fest, dass ein Fenster einen Rahmen mit abgesenkter Kante hat.
$WS_EX_CONTEXTHELP	Bindet ein Fragezeichen in die Titelleiste des Fensters ein. Kann nicht zusammen mit $WS_MAXIMIZEBOX oder $WS_MINIMIZEBOX verwendet werden.
$WS_EX_DLGMODALFRAME	Erstellt ein Fenster mit doppeltem Rahmen. Das Fenster kann optional mit einer Titelleiste erstellt werden, indem der WS_CAPTION Stil als Stilparameter angegeben wird.
$WS_EX_MDICHILD	Erstellt ein Child-Fenster innerhalb seines Parent-Fensters (als Simulation, nicht wirklich MDI).
$WS_EX_OVERLAPPEDWINDOW	Kombiniert die beiden Stile $WS_EX_CLIENTEDGE und $WS_EX_WINDOWEDGE.
$WS_EX_STATICEDGE	Erstellt ein Fenster mit einem 3D-Rahmen-Stil, das f&uuml;r Felder gedacht ist, die keine Eingaben durch Benutzer akzeptieren.
$WS_EX_TOPMOST	Legt fest, dass ein Fenster mit diesem Stil vor allen anderen Fenstern platziert werden soll und auch dann das vorderste Fenster bleibt, selbst wenn das Fenster deaktiviert wird.
$WS_EX_TRANSPARENT	Das Fenster erscheint transparent, weil die Ausschnitte der darunterliegenden "Geschwister"-Fenster schon angezeigt worden sind.
$WS_EX_TOOLWINDOW	Erstellt eine Toolbar (tool window); das hei&szlig;t, ein Fenster, das als schwebende Symbolleiste verwendet werden soll. Eine Toolbar hat eine Titelleiste, die k&uuml;rzer ist als normale Titelleisten, und der Fenstertitel wird mit einer kleineren Schrift angezeigt. Eine Toolbar erscheint nicht in der Taskleiste  oder im Dialogfeld, das erscheint, wenn der Benutzer die Tastenkombination ALT+TAB dr&uuml;ckt. Wenn ein solches Fenster ein System-Men&uuml; hat, wird kein Icon daf&uuml;r auf der Titelleiste angezeigt. Man kann das System-Men&uuml; aber trotzdem mit ALT+SPACE sichtbar machen.
$WS_EX_WINDOWEDGE	Legt fest, dass ein Fenster einen Rahmen mit erh&ouml;hter Kante hat.
$WS_EX_LAYERED	Erstellt ein Fenster mit mehreren Schichten (Layern). Beachte, dass dieser Stil nicht f&uuml;r Child-Fenster verwendet werden kann.
@@End@@

Um die oben genannten Werte verwenden zu k&ouml;nnen, muss #include <WindowsConstants.au3> in das Skript eingef&uuml;gt werden.

Folgendes ist zu beachten: Das zur&uuml;ckgegebene Handle dieser Funktion, ist ein echtes Fenster-Handle, was hei&szlig;t, dass es in der gleichen Art verwendet werden kann wie der R&uuml;ckgabewert von <a href="WinGetHandle.htm">WinGetHandle()</a>.

<a href="../guiref/GUIRef.htm">- - - - - - - - Erkl&auml;rung der Controls - - - - - - - -</a>


###Related###
GUISetParameters..., GUICtrlCreate..., GUIGetMsg, GUISwitch, GUIGetStyle, GUIDelete, WinGetHandle, GUICtrlSetDefBkColor, GUICtrlSetDefColor, GUIGetCursorInfo


###Example###
@@IncludeExample@@
