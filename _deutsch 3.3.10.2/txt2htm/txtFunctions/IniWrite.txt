###Function###
IniWrite

###Description###
Schreibt einen Wert in eine standardkonforme .ini-Datei.

###Syntax###
IniWrite ( "filename", "section", "key", "value" )


###Parameters###
@@ParamTable@@
filename
	Der Dateiname der .ini-Datei.
section
	Der Sektionsname in der .ini-Datei.
key
	Der Name des Schl&uuml;ssels in der .ini-Datei.
value
	Der zu schreibende/&auml;ndernde Wert.
@@End@@

###ReturnValue###
@@ReturnTable@@
Erfolg:	1.
Fehler:	0, wenn die Datei schreibgesch&uuml;tzt ist.
@@End@@


###Remarks###
Eine standardkonforme .ini-Datei sieht folgenderma&szlig;en aus:
<i>[SektionsName]
Schl&uuml;ssel=Wert</i>

Wenn die Datei nicht bereits existiert, wird sie erstellt, sofern das Verzeichnis existiert. Schl&uuml;ssel und/oder Sektionen werden am Ende angeh&auml;ngt und in keiner Weise sortiert.

Wenn Anf&uuml;hrungszeichen einen .ini-Wert umschlie&szlig;en sollen, so m&uuml;ssen sie gedoppelt werden, da der &auml;u&szlig;ere Satz Anf&uuml;hrungszeichen entfernt wird. Z.B.: ""Dies ist ein Test"" ergibt "Dies ist ein Test", bei der Verwendung von <a href="IniRead.htm">IniRead()</a>.

Voranstehende und nachfolgende Leerzeichen werden entfernt. Um die Leerzeichen beizubehalten, muss der String in Anf&uuml;hrungszeichen gesetzt werden. Beispiel: "    Dies ist ein Test" wird die Leerzeichen erhalten. Jedoch werden die Anf&uuml;hrungszeichen, wie oben beschrieben, entfernt.

Mehrzeilige Werte sind nicht m&ouml;glich.

Wenn eine .ini-Datei mit Unicode-Kodierung verwendet werden soll, muss zuerst eine .ini-Datei mit der <a href="FileOpen.htm">FileOpen()</a> Funktion erstellt und der mode-Parameter auf Unicode gesetzt werden.


###Related###
IniDelete, IniRead, IniReadSection, IniReadSectionNames, IniWriteSection, IniRenameSection


###Example###
@@IncludeExample@@
