<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>AutoIt unter Windows 64-Bit Edition</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1>AutoIt unter Windows 64-Bit Edition</h1>

  
<p>AutoIt war immer eine traditionelle 32-Bit Anwendung. Seit dem 3.2.10.0 Release
wurden einige Komponenten mit ausschlie&szlig;lich x64-Versionen hinzugef&uuml;gt, unter
anderem:</p>
<ul>
	<li>AutoIt (AutoIt3_x64.exe)</li>
	<li>Aut2Exe (Aut2Exe_x64.exe)</li>
	<li>Au3Info (Au3Info_x64.exe)</li>
	<li>AutoItX (AutoItX3_x64.dll)</li>
</ul>
<p>W&auml;hrend der Installation, sofern sie auf einem x64-System l&auml;uft, wird angeboten,
diese x64-Versionen zu installieren und zu konfigurieren. Diese Versionen sind voll
x64 kompatibel, obwohl einige Skripte, die <a href="../functions/DllCall.htm">
DllCall</a>/<a href="../functions/DllStructCreate.htm">DllStruct</a>  mit
eigenen Benutzerstrukturen benutzen, Werte benutzen k&ouml;nnen, die die 64-Bit Kompatibilit&auml;t
durchbrechen (wenn z.B. 32-Bit Integerzahlen als Zeiger genutzt werden). Dies
schlie&szlig;t auch einige der UDFs ein, die bei AutoIt mitgeliefert werden, da
diese nicht alle auf x64-Systemen getestet wurden.</p>
<p>Man kann die x86-Version von AutoIt mit einem Rechtsklick auf ein Skript und
Auswahl von "Run Script (x86)" starten.</p>
<p>Wenn man entdeckt, dass ein Skript nicht korrekt unter x64 l&auml;uft, wohl aber
unter x86, dann wird man gebeten, dies als Fehler zu melden.</p>
<p>Um zu erkennen, ob ein System unter einer 64-Bit Edition von Windows l&auml;uft,
verwendet man das Makro @OSArch. Um zu erkennen, ob man eine 32 oder 64-Bit
Version von AutoIt nutzt, verwendet man das Makro @AutoItX64.</p>
<p>&nbsp;</p>
<h2>Ausf&uuml;hrung der 32-Bit Version von AutoIt auf einem x64 System</h2>
<p>Windows hat einen speziellen Mechanismus f&uuml;r das Festlegen von einigen
System-Verzeichnissen:</p>
<table borderColor="#c0c0c0" cellSpacing="0" cellPadding="3" width="623" border="1">
  <tr>
    <td width="129" bgColor="#000099" height="16"><b><font color="#FFFFFF">Verzeichnisse</font></b></td>
    <td width="253" bgColor="#000099" height="16"><b><font color="#FFFFFF">
    32-Bit Wert</font></b></td>
    <td width="215" bgColor="#000099" height="16"><b><font color="#FFFFFF">
    64-Bit Wert</font></b></td>
  </tr>
  <tr>
    <td width="129">@SystemDir</td>
    <td width="253">@windowsdir & "\SYSWOW64"</td>
    <td width="215">@windowsdir & "\System32"</td>
  </tr>
  <tr>
    <td width="129">@ProgramFilesDir</td>
    <td width="253">@SystemDrive & "\Program Files(x86)"</td>
    <td width="215">@systemDrive & "\Program Files"</td>
  </tr>
</table>
<p>Durch das deaktivieren dieses 'Umleitungsmechanismus' ist es m&ouml;glich, auf die 64-Bit
Versionen dieser Verzeichnisse zuzugreifen.</p>
<p class="codebox"><br>
<span class="S4"><span style="background-position: 0% 0%">D<span style="background-color: #F0F5FA">llCall</span></span></span><span class="S8">(</span><span class="S7">"kernel32.dll"</span><span class="S8">,</span><span class="S0">
</span><span class="S7">"int"</span><span class="S8">,</span><span class="S0">
</span><span class="S7">"Wow64DisableWow64FsRedirection"</span><span class="S8">,</span><span class="S0">
</span><span class="S7">"int"</span><span class="S8">,</span><span class="S0">
</span><span class="S7"><font color="#FF00FF">1</font></span><span class="S8">)</span><br>
 </p>
<p>Mehr Informationen findet man bei
<a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winprog64/winprog64/file_system_redirector.asp">
<u>MSDN</u></a>.</p>
<p>F&uuml;r die Registry nutzt man HKCR64 oder HKLM64, um den Umleitungsmechanismus
zu umgehen. Siehe 
Registry Funktionsdokumentation.</p>
<p> </p>
</body>
</html>
