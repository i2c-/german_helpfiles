###User Defined Function###
_ScreenCapture_Capture

###Description###
Erstellt von einem Bereich des Bildschirms einen Screenshot

###Syntax###
#include <ScreenCapture.au3>
_ScreenCapture_Capture([$sFileName = "" [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $fCursor = True]]]]]])

###Parameters###
@@ParamTable@@
$sFileName
	[optional] Kompletter Pfad, Dateiname und Erweiterung der Bilddatei
$iLeft
	[optional] X Koordinate des linken oberen Ecks des Rechtecks
$iTop
	[optional] Y Koordinate des linken oberen Ecks des Rechtecks
$iRight
	[optional] X Koordinate des rechten unteren Ecks des Rechtecks. Falls dies auf -1 gesetzt wird, wird die komplette Breite des Bildschirms genutzt.
$iBottom
	[optional] Y Koordinate des rechten unteren Ecks des Rechtecks. Falls dies auf -1 gesetzt wird, wird die komplette H&ouml;he des Bildschirms genutzt.
$fCursor
	[optional] Falls "True", erscheint der Cursor auch auf dem erstellten Bild
@@End@@

###ReturnValue###
Falls $sFileName leer ist, so gibt die Funktion ein Handle zu einem HBITMAP zur&uuml;ck.
Dieses Handle muss durch _WinAPI_DeleteObject wieder gel&ouml;scht werden.
Falls $sFileName angegeben wird, so wird das Bild in der Datei gespeichert und es wird nichts zur&uuml;ckgegeben.

###Remarks###
Falls $sFileName nicht leer ist, wird ein Screenshot vom Bildschirm erstellt und in eine Datei gespeichert. Falls $sFileName leer ist, wird ein Screenshot vom Bildschirm erstellt und ein HBITMAP-Handle zu einem Bitmap-Bild zur&uuml;ckgegeben. In diesem Fall muss nach dem Ende der Verwendung der Bitmap durch Aufruf der Funktion _WinAPI_DeleteObject das Bitmap-Handle freigegeben werden.

Ben&ouml;tigt GDI+: GDI+ ben&ouml;tigt eine korrekte Installation der entsprechenden Bibliotheken f&uuml;r das Betriebssystem Windows 2000.

###Related###
_WinAPI_DeleteObject, _ScreenCapture_SaveImage

###Example###
@@IncludeExample@@
