###Function###
GUICtrlCreateTreeView

###Description###
Erstellt ein Treeview-Control f&uuml;r die GUI.

###Syntax###
GUICtrlCreateTreeView ( left, top [, width [, height [, style [, exStyle]]]] )


###Parameters###
@@ParamTable@@
left
	Die linke Seite des Controls. Wird -1 verwendet, dann wird left mit Hilfe von <a href="AutoItSetOption.htm#GUICoordMode">GUICoordMode</a> berechnet.
top
	Die Oberkante des Controls. Wird -1 verwendet, dann wird top mit Hilfe von <a href="AutoItSetOption.htm#GUICoordMode">GUICoordMode</a> berechnet.
width
	[optional] Die Breite des Controls (voreingestellt ist die zuvor verwendete Breite).
height
	[optional] Die H&ouml;he des Controls (voreingestellt ist die zuvor verwendete H&ouml;he).
style
	[optional] Legt den Stil des Controls fest. Siehe <a href="../appendix/GUIStyles.htm#TreeView">Anhang GUI-Stile f&uuml;r Controls</a>.
	
	Standard (-1) : $TVS_HASBUTTONS, $TVS_HASLINES, $TVS_LINESATROOT, $TVS_DISABLEDRAGDROP, $TVS_SHOWSELALWAYS
	Erzwungener Stil : $WS_TABSTOP
exStyle
	[optional] Legt den erweiterten Stil des Controls fest. Siehe <a href="../appendix/GUIStyles.htm#Extended">Tabelle der erweiterten Stile</a>.
@@End@@

###ReturnValue###
@@ReturnTable@@
Erfolg:	Gibt die Identifikationsnummer (Control-ID) des neuen Controls zur&uuml;ck.
Fehler:	Gibt 0 zur&uuml;ck.
@@End@@


###Remarks###
Um Informationen im Control zu setzen oder zu ver&auml;ndern siehe <a href="GUICtrlUpdate Management.htm">GUICtrlUpdate...</a>.

Um weitere Stile zus&auml;tzlich zum Standardstil zu verwenden ist <b>BitOr</b>($GUI_SS_DEFAULT_TREEVIEW, newstyle,...) zu benutzen.

Um die oben festgelegten Wert verwenden zu k&ouml;nnen, muss man #include <TreeViewConstants.au3> in sein Skript schreiben

<a href="../guiref/GUIRef.htm">- - - - - - - - Erkl&auml;rung der Controls - - - - - - - -</a>

###Related###
GUICtrlCreateTreeViewItem, GUICoordMode (Option), GUICtrlUpdate..., GUIGetMsg, GUICtrlRead


###Example###
@@IncludeExample@@
