###Function###
Send

###Description###
Sendet einen oder mehrere simulierte Tastendr&uuml;cke an das aktive Fenster.
###Syntax###
Send ( "keys" [, flag] )


###Parameters###
@@ParamTable@@
keys
	Die Folge von Tastendr&uuml;cken, die gesendet werden soll.
flag
	[optional] Kennzeichnet, wie der "keys"-Parameter verarbeitet wird:
	  flag = 0 (Standard), Text beinhaltet spezielle Zeichen, wie „+“ und „!“, die f&uuml;r SHIFT- (=UMSCHALT) und ALT-Tasten stehen.
	  flag = 1, "keys" wird so wie angegeben gesendet.
@@End@@


###ReturnValue###
Keine.

###Remarks###
Siehe <a href="../appendix/SendKeys.htm">Anhang</a> f&uuml;r einige Tipps zur Verwendung von "Send". AutoIt kann alle ASCII und erweiterte ASCII Zeichen (0-255) senden. Um UNICODE Zeichen zu senden, muss die "ASC" Option  mit dem Code des Zeichens, das gesendet werden soll, benutzt werden (siehe {ASC} am Ende der untenstehenden Tabelle).

Die "Send" Befehlssyntax ist &auml;hnlich dem von ScriptIt und Visual Basic verwendetem "SendKeys"-Befehl. Die Zeichen werden wie geschrieben gesendet, mit Ausnahme der folgenden Zeichen:

'!'
Dies weist AutoIt an, den ALT Tastendruck zu senden, folglich w&uuml;rde Send("Das ist ein Text!a") die Tastendr&uuml;cke "Das ist ein Text" senden und dann die Tastendr&uuml;cke "ALT+a".

Nebenbei sind einige Programme sehr empfindlich bez&uuml;glich Gro&szlig;buchstaben und ALT-Taste, z.B. "!A" ist unterschiedlich zu "!a". Der erste Ausdruck bewirkt ALT+SHIFT+A, der zweite ist ALT+a. Im Zweifelsfall ist die Kleinschreibung zu verwenden!

'+'
Dies weist AutoIt an, den SHIFT-(=UMSCHALT)-Tastendruck zu senden, folglich w&uuml;rde Send("Hell+o") den Text "HellO" senden. Send("!+a") w&uuml;rde "ALT+SHIFT+a" senden.

'^'
Dies weist AutoIT an, den CTRL (=STRG)-Tastendruck zu senden, folglich w&uuml;rde Send("^!a") "STRG+ALT+a" senden.

Bemerkung: Einige Programme reagieren sehr empfindlich auf Gro&szlig;-/Kleinschreibung (Case sensitive) und STRG-Tastendr&uuml;cke, z.B. ist "^A" unterschiedlich zu "^a". Der erste Ausdruck sendet STRG+SHIFT+A, der zweite sendet STRG+a. Im Zweifelsfall benutzt man die Kleinschreibung!

'#'
Die Hash (Raute oder Doppelkreuz)-Taste simuliert das Dr&uuml;cken der Windows-Taste. Folglich w&uuml;rde Send("#r") Win+r senden und damit die Run Dialogbox (Ausf&uuml;hren-Dialog) aufrufen.

Man kann "SendCapslockMode" so einstellen, dass die CAPSLOCK-Taste (FESTSTELLTASTE) beim Start einer "Send"-Operation abgeschaltet wird und nach Beenden wieder zur&uuml;ckgesetzt wird.
Wenn aber ein Anwender die SHIFT-Taste beim Beginn einer "Send" Funktion gedr&uuml;ckt h&auml;lt, k&ouml;nnte der Text in Gro&szlig;buchstaben gesendet werden.
Eine Vermeidungsm&ouml;glichkeit ist Send("{SHIFTDOWN}{SHIFTUP}") vor dem eigentlichen "Send" Befehl zu senden.

Bestimmte Tastaturen, wie z.B. die tschechische, senden unterschiedliche Zeichen, je nachdem, ob die SHIFT- oder FESTSTELL-Taste bet&auml;tigt ist. Nach der AutoIt-Arbeitsweise werden die Zeichen der FESTSTELL-Taste als SHIFT-Zeichen gesendet und deshalb <b>kann dieses Verhalten nicht simuliert werden</b>.
 
Bestimmte spezielle Tastendr&uuml;cke m&uuml;ssen in geschweiften Klammern gesendet werden:
Wichtig : Windows verbietet das Senden der Tastenkombination "STRG-ALT-DEL"!
@@StandardTable1@@
<b>Send Befehl (wenn Flag = 0)</b>	<b>Resultierender Tastendruck</b>
{!}	!
{#}	#
{+}	+
{^}	^
{{}	{
{}}	}
{SPACE}	SPACE (Leertaste)
{ENTER}	Eingabetaste auf der Haupttastatur
{ALT}	ALT
{BACKSPACE} oder {BS}	BACKSPACE (R&uuml;cktaste)
{DELETE} oder {DEL}	DELETE Entfernen (Entf)
{UP}	Nach-Oben-Taste
{DOWN}	Nach-Unten-Taste
{LEFT}	Nach-Links-Taste
{RIGHT}	Nach-Rechts-Taste
{HOME}	HOME (Pos1 – Taste)
{END}	END (Ende - Taste)
{ESCAPE} oder {ESC}	ESCAPE- Taste
{INSERT} oder {INS}	INS (EINF&Uuml;GEN (Einfg)-Taste)
{PGUP}	PageUp (Bild-Auf-Taste)
{PGDN}	PageDown (Bild-Ab-Taste)
{F1} - {F12}	Funktionstasten
{TAB}	TAB(Tabulator – Taste)
{PRINTSCREEN}	Druck-Taste
{LWIN}	linke Windows Taste
{RWIN}	rechte Windows Taste
{NUMLOCK on}	NUMLOCK (Num)-Taste (on/off/toggle)
{CAPSLOCK off}	CAPSLOCK-Taste (FESTSTELLTASTE) (on/off/toggle)
{SCROLLLOCK toggle}	ROLLEN-Taste (on/off/toggle)
{BREAK}	STRG+Break = STRG+UNTERBRECHUNG Taste
{PAUSE}	PAUSE-Taste

{NUMPAD0} - {NUMPAD9}	Ziffernblock 0-9 (Numpad = numerisches Tastenfeld)
{NUMPADMULT}	Multiplizieren auf Numpad
{NUMPADADD}	Addieren auf Numpad
{NUMPADSUB}	Subtrahieren auf Numpad
{NUMPADDIV}	Dividieren auf Numpad
{NUMPADDOT}	Punkt (Komma) auf Numpad
{NUMPADENTER}	Eingabe-Taste auf Numpad
{APPSKEY}	Windows-Programm Taste
{LALT}	Linke ALT-Taste
{RALT}	Rechte ALT-Taste
{LCTRL}	Linke STRG-Taste
{RCTRL}	Rechte STRG-Taste
{LSHIFT}	Linke Shift-Taste
{RSHIFT}	Rechte Shift-Taste
{SLEEP}	Computer PAUSE Taste
{ALTDOWN}	H&auml;lt die ALT-Taste gedr&uuml;ckt, bis {ALTUP} gesendet wird
{SHIFTDOWN}	H&auml;lt die SHIFT-Taste gedr&uuml;ckt, bis {SHIFTUP} gesendet wird
{CTRLDOWN}	H&auml;lt die STRG-Taste gedr&uuml;ckt, bis {CTRLUP} gesendet wird
{LWINDOWN}	H&auml;lt die linke Windows-Taste gedr&uuml;ckt, bis {LWINUP} gesendet wird
{RWINDOWN}	H&auml;lt die rechte Windows-Taste gedr&uuml;ckt, bis {RWINUP} gesendet wird
{ASC nnnn}	Sendet die ALT+nnnn ASCII-CODE-Tastenkombination
{BROWSER_BACK}	Nur 2000/XP: W&auml;hlt den Browser-Button "Zur&uuml;ck"
{BROWSER_FORWARD}	Nur 2000/XP: W&auml;hlt den Browser-Button "Vorw&auml;rts"
{BROWSER_REFRESH}	Nur 2000/XP: W&auml;hlt den Browser-Button "Aktualisieren"
{BROWSER_STOP}	Nur 2000/XP: W&auml;hlt den Browser-Button "Stop"
{BROWSER_SEARCH}	Nur 2000/XP: W&auml;hlt den Browser-Button "Suche"
{BROWSER_FAVORITES}	Nur 2000/XP: W&auml;hlt den Browser-Button "Favoriten"
{BROWSER_HOME}	Nur 2000/XP: Startet den Browser und geht zur Startseite
{VOLUME_MUTE}	Nur 2000/XP: Stellt Lautsprecher auf Stumm
{VOLUME_DOWN}	Nur 2000/XP: Reduziert die Lautst&auml;rke
{VOLUME_UP}	Nur 2000/XP: Vergr&ouml;&szlig;ert die Lautst&auml;rke
{MEDIA_NEXT}	Nur 2000/XP: W&auml;hlt den n&auml;chsten Track im Media Player
{MEDIA_PREV}	Nur 2000/XP: W&auml;hlt den vorhergehenden Track im Media Player
{MEDIA_STOP}	Nur 2000/XP: Stoppt Media Player
{MEDIA_PLAY_PAUSE}	Nur 2000/XP: Wiedergabe/Pause Media Player
{LAUNCH_MAIL}	Nur 2000/XP: Startet die Standard-E-Mail-Anwendung
{LAUNCH_MEDIA}	Nur 2000/XP: Startet den Media Player
{LAUNCH_APP1}	Nur 2000/XP: Startet das Anwender-Programm 1
{LAUNCH_APP2}	Nur 2000/XP: Startet das Anwender-Programm 2
@@End@@

Um z.B. den Wert A als ASCII-Code zu senden (man dr&uuml;ckt st&auml;ndig die ALT Taste und gibt am Nummernblock die Ziffern 065 ein):
    Send("{ASC 065}")

Es k&ouml;nnen auch mehrere verschiedene ASCII-Zeichen, mit einem Send-Befehl, an ein Control gesendet werden, z.B.
   Send("{ASC 067}{ASC 058}{ASC 092}")    ; Sendet C:\ an das Control.

(wenn man einen zweistelligen ASCII-Code hat, muss eine 0 vorangestellt werden (z.B. 065), andernfalls wird die veraltete Codepage 437 verwendet.)

Um UNICODE Zeichen zu senden, gibt man den Code entweder dezimal oder in hex ein, als Beispiel ein chinesisches Zeichen: 
    Send("{ASC 2709}") oder Send("{ASC 0xA95}")


Einzelne Tastendr&uuml;cke k&ouml;nnen mehrfach wiederholt werden, z.B.
    Send("{DEL 4}")    ;Dr&uuml;ckt 4 mal die DEL (Entf-) Taste
    Send("{S 30}")      ;Sendet 30 mal ein S
    Send("+{TAB 4}")   ;Dr&uuml;ckt 4 mal SHIFT+TAB 

Die Taste wird mindestens ein Mal gesendet, auch wenn als Zahl Null angegeben wird.

Um eine Taste gedr&uuml;ckt zu lassen:
    Send("{a down}")    ;H&auml;lt die Taste A gedr&uuml;ckt
    Send("{a up}")        ;L&auml;sst die Taste wieder los

Um den Status der Capslock, Numlock oder Scrolllock Taste zu setzen:
    Send("{NumLock on}")        ;Schaltet die  NumLock Taste  ein
    Send("{CapsLock off}")      ;Schaltet die  CapsLock Taste aus
    Send("{Scrolllock toggle}") ;&Auml;ndert den Zustand der  Scrolllock Taste (wenn die Taste eingeschaltet ist, wird sie ausgeschaltet bzw. umgekehrt)

Will man einen Z&auml;hler als Variable vordefinieren, dann benutzt man das so:
    $n = 4
    Send("+{TAB " & $n & "}")

Will man z.B. den ASCII-Code "A" vier Mal senden, dann probiert man das hier:
    $x = Chr(65)
    Send("{" & $x & " 4}")

Die LAPTOP-Taste "Fn" kann leider nicht simuliert werden.

Bemerkung:  Wenn das Flag auf 1 gesetzt ist, dann sind die o.g. speziellen Prozeduren ausgeschaltet.
Dies ist sinnvoll, wenn man einen Text, der aus einer Variablen stammt, senden will und dieser Text exakt gleich gesendet werden soll. 

Beispiel: &Ouml;ffnet die Ordneroptionen (in der Systemsteuerung) und versucht folgendes: 
@@StandardTable1@@
Send("{TAB}")	Springt zum n&auml;chsten Button oder n&auml;chster  Checkbox, etc. 
Send("+{TAB}")	Springt zum vorhergehenden Button oder  Checkbox, etc.
Send("^{TAB}")	Springt zum n&auml;chsten WindowTab (bei einem Fenster mit mehreren TABs, z.B. Firefox) 
Send("^+{TAB}")	Springt zum vorhergehenden WindowTab. 
Send("{SPACE}")	Kann verwendet werden, um den Zustand einer Checkbox zu wechseln oder einen Button anzuklicken. 
Send("{+}")	Setzt einen Haken (Kreuz, etc.) in der Checkbox (wenn es eine “echte” Checkbox ist!!) 
Send("{-}")	L&ouml;scht den Haken (Kreuz, etc.) in der Checkbox
Send("{NumPadMult}")	Klappt alle Ebenen einer Ordnerstruktur im Explorer (vom Typ SysTreeView32) auf.
@@End@@

Man benutzt die ALT-Taste auch, um Men&uuml;s/ Untermen&uuml;s zu steuern, zum Beispiel bei einem ge&ouml;ffneten NotePad:
Send("!d")  	Sendet Alt+d, (&ouml;ffnet im Notepad das Datei Men&uuml;).

@@StandardTable1@@
Send("{DOWN}")	F&auml;hrt runter im Men&uuml;. 
Send("{UP}")	F&auml;hrt rauf im Men&uuml;.
Send("{LEFT}")	F&auml;hrt nach links in ein neues Men&uuml; oder &ouml;ffnet ein Untermen&uuml;.
Send("{RIGHT}")	F&auml;hrt nach rechts in ein neues Men&uuml; oder schlie&szlig;t ein Untermen&uuml;.
@@End@@
Eine komplette Liste der Tastaturk&uuml;rzel findet man in der Windows-Hilfe (Win+F1), falls man nicht wei&szlig;, wie wichtig ALT+F4, STRG+C oder STRG+V etc... sind.

Wenn man ein Skript auf einem Remotecomputer durch ein Programm wie psexec (www.sysinternals.com) oder beyondexec (www.beyondlogic.org) ausf&uuml;hren l&auml;sst, ist es notwendig (insbesondere dann, wenn Tastendr&uuml;cke an ein Programm gesendet werden sollen, das per Skript mittels RUN-Funktion gestartet wird), <b>ControlSend</b> oder ControlXXX-Funktionen zu benutzen, um eine direkte Kommunikation mit der Steuerung herzustellen. Der SEND-Befehl, auch mit der Option  Opt("SendAttachMode",1),  funktioniert hier nicht.
Um bessere Rechte auf dem Remote-Computer beim Senden zu haben, benutzt man den Modus -s.

Opt("SendKeyDelay",...) &auml;ndert die L&auml;nge der kurzen Pause zwischen gesendeten Tastenanschl&auml;gen.
Opt("SendKeyDownDelay",...) &auml;ndert die Zeitspanne, die eine Taste niedergehalten wird, bevor diese wieder freigegeben wird.
Wird "SendKeyDelay" und "SendKeyDownDelay" auf 0 gesetzt, so werden alle Verz&ouml;gerungen beim senden von Tasten entfernt. Dies kann unter bestimmten Umst&auml;nden notwendig sein, zum Beispiel wenn man mit ("#l") das System sperrt, um zu vermeiden, dass die WIN-Taste untengehalten wird.


###Related###
SendAttachMode (Option), SendKeepActive, SendKeyDelay (Option), SendKeyDownDelay (Option), ControlSend, BlockInput, HotKeySet, WinMenuSelectItem


###Example###
@@IncludeExample@@
